#!/bin/sh /etc/rc.common
# shellcheck disable=SC2039,SC2154
PKG_VERSION='dev-test'

export START=94
export USE_PROCD=1

readonly packageName='wireshark-helper'
readonly serviceName="$packageName $PKG_VERSION"
export monitorIP wiresharkIP serviceEnabled

is_ipv4() { expr "$1" : '[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*$' >/dev/null; }
is_ipv6() { [ "${1//:}" != "$1" ]; }

load_package_config() {
	config_load "$packageName"
	config_get_bool serviceEnabled 'config' 'enabled' 0
	config_get iface               'config' 'interface' 'lan'
	config_get monitorIP           'config' 'monitor_ip'
	config_get wiresharkIP         'config' 'wireshark_ip'
}

is_enabled() {
	load_package_config
	[ "$serviceEnabled" -gt 0 ] || return 1
}

redirect()
{
	local physInterface
	if [ "$iface" = "lan" ]; then
		physInterface="br-lan"
	else
		physInterface="$(uci -q get "network.${iface}.ifname")"
	fi
	iptables-save | grep -Fv -- "$packageName" | iptables-restore
	case $1 in
		add)
			if is_ipv4 "$monitorIP" && is_ipv4 "$wiresharkIP"; then
				iptables -A POSTROUTING -t mangle -o "$physInterface" ! -s "$monitorIP" -j TEE --gateway "$wiresharkIP" -m comment --comment "$packageName"
				iptables -A PREROUTING -t mangle -i "$physInterface" ! -d "$monitorIP" -j TEE --gateway "$wiresharkIP" -m comment --comment "$packageName"
			else
				return 1
			fi
			;;
	esac
}

start_service() {
	is_enabled || return 1
	redirect add || return 1
	procd_open_instance "main"
	procd_set_param command /bin/true
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
	logger -t "$serviceName" "Service started: monitoring ${monitorIP}, sending packets to ${wiresharkIP}."
}


stop_service () {
	load_package_config
	redirect remove
	logger -t "$serviceName" "Service stopped."
}

service_triggers() {
	procd_add_reload_trigger 'wireshark-helper'
}
